{
  "openapi": "3.1.0",
  "info": {
    "title": "Letras y Papeles API",
    "description": "Endpoints para la implementación del proyecto Letras y Papeles",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Cart",
      "description": "Operaciones relacionadas con el carro de compras"
    },
    {
      "name": " ** Endpoints Orden **",
      "description": "Operaciones relacionadas con las Órdenes"
    },
    {
      "name": "** Endpoints Producto **",
      "description": "Operaciones relacionadas con los productos"
    },
    {
      "name": "Autenticación",
      "description": "Operaciones relacionadas con la autenticación de usuario'"
    },
    {
      "name": "** Endpoints Cliente **",
      "description": "Operaciones relacionadas con la entidad Cliente"
    },
    {
      "name": "Sucursales",
      "description": "Operaciones relacionadas con las sucursales"
    }
  ],
  "paths": {
    "/api/product/{id}": {
      "get": {
        "tags": [
          "** Endpoints Producto **"
        ],
        "summary": "Obtiene un producto por su ID",
        "description": "Este endpoint devuelve un producto específico basado en su ID",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del producto",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Producto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "** Endpoints Producto **"
        ],
        "summary": "Actualiza un producto existente",
        "description": "Este endpoint permite actualizar un producto existente en el sistema",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del producto a actualizar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Datos del producto a actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Producto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "** Endpoints Producto **"
        ],
        "summary": "Elimina un producto por su ID",
        "description": "Este endpoint permite eliminar un producto específico basado en su ID",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del producto",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Producto eliminado exitosamente",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order/{id}": {
      "get": {
        "tags": [
          " ** Endpoints Orden **"
        ],
        "summary": "Obtiene una orden por su ID",
        "description": "Este endpoint permite obtener una orden específica utilizando su ID",
        "operationId": "obtenerPorId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la orden",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Orden obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          " ** Endpoints Orden **"
        ],
        "summary": "Actualiza una orden existente",
        "description": "Este endpoint permite actualizar los detalles de una orden existente",
        "operationId": "actualizarOrden",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la orden",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Datos de la orden a actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Orden actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/branch/{id}": {
      "get": {
        "tags": [
          "Sucursales"
        ],
        "summary": "Obtiene una sucursal por su ID",
        "description": "Recupera los detalles de una sucursal específica utilizando su identificador único",
        "operationId": "obtenerPorId_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la sucursal",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Sucursal encontrada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "404": {
            "description": "Sucursal no encontrada con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "400": {
            "description": "ID de sucursal inválido.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sucursales"
        ],
        "summary": "Actualiza una sucursal existente",
        "description": "Permite modificar completamente los datos de una sucursal existente identificándola por su ID",
        "operationId": "actualizarSucursal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la sucursal a actualizar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Datos actualizados de la sucursal",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              },
              "examples": {
                "Sucursal actualizada": {
                  "summary": "Ejemplo de actualización de sucursal",
                  "description": "Sucursal actualizada",
                  "value": {
                    "name": "Sucursal Test Actuliazada",
                    "address": "Av. Test 123",
                    "city": "Ciudad de Test"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucursal actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "404": {
            "description": "Sucursal no encontrada con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Datos de la sucursal inválidos o incompletos",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sucursales"
        ],
        "summary": "Elimina una sucursal",
        "description": "Permite eliminar una sucursal específica del sistema utilizando su identificador único",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la sucursal a eliminar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Sucursal eliminada exitosamente",
            "content": {
              "application/json": {
                "example": {
                  "message": "Sucursal eliminada exitosamente"
                }
              }
            }
          },
          "404": {
            "description": "Sucursal no encontrada con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/product": {
      "get": {
        "tags": [
          "** Endpoints Producto **"
        ],
        "summary": "Obtiene una lista de todlos los productos",
        "description": "Este endpoint devuelve una lista completa de todas los productos registradas en el sistema",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "Lista de productos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay productos disponibles (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelProductResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "** Endpoints Producto **"
        ],
        "summary": "Crea un nuevo producto",
        "description": "Este endpoint permite crear un nuevo producto en el sistema",
        "operationId": "createProduct",
        "requestBody": {
          "description": "Datos del producto a crear",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              },
              "examples": {
                "Producto ejemplo": {
                  "summary": "Ejemplo de un producto completo",
                  "description": "Producto ejemplo",
                  "value": {
                    "name": "Producto Ejemplo",
                    "sku": "SKU12345",
                    "details": "Detalles del producto",
                    "price": 100
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Producto creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/order": {
      "get": {
        "tags": [
          " ** Endpoints Orden **"
        ],
        "summary": "Obtiene una lista de todas las órdenes",
        "description": "Este endpoint devuelve una lista completa de todas las órdenes registradas en el sistema",
        "operationId": "obtenerTodos",
        "responses": {
          "200": {
            "description": "Lista de órdenes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "204": {
            "description": "No hay órdenes disponibles (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelOrder"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          " ** Endpoints Orden **"
        ],
        "summary": "Crea una nueva orden",
        "description": "Este endpoint permite crear una nueva orden en el sistema",
        "operationId": "crearPedido",
        "requestBody": {
          "description": "Datos de la orden a crear",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              },
              "examples": {
                "Orden ejemplo": {
                  "description": "Orden ejemplo",
                  "value": {
                    "orderNumber": "ORD-XYZ123",
                    "issueDate": "2025-07-14T14:45:00",
                    "totalAmount": 12000.5,
                    "clientId": 2,
                    "cartId": 2
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Orden creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/client": {
      "get": {
        "tags": [
          "** Endpoints Cliente **"
        ],
        "summary": "Obtiene una lista de todos los clientes",
        "description": "Este endpoint devuelve una lista completa de todos los clientes registrados en el sistema",
        "operationId": "getClients",
        "responses": {
          "200": {
            "description": "Lista de clientes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay clientes creados (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelClient"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelClient"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "** Endpoints Cliente **"
        ],
        "summary": "Crea un nuevo cliente",
        "description": "Permite registrar un nuevo cliente en el sistema con todos los datos necesarios",
        "operationId": "create",
        "requestBody": {
          "description": "Datos del nuevo cliente a crear",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDTO"
              },
              "examples": {
                "Ejemplo Cliente": {
                  "summary": "Ejemplo de creación de cliente",
                  "description": "Ejemplo Cliente",
                  "value": {
                    "name": "Juan Pérez",
                    "email": "juan.perez@example.com",
                    "password": "password123",
                    "fidelityPoints": 0
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Cliente creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Datos del cliente inválidos o incompletos",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto: un cliente con datos similares ya existe",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/carts": {
      "post": {
        "tags": [
          "Cart"
        ],
        "operationId": "processCart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/branch": {
      "get": {
        "tags": [
          "Sucursales"
        ],
        "summary": "Obtiene una lista de todas las sucursales",
        "description": "Este endpoint devuelve una lista completa de todas las sucursales registradas en el sistema",
        "operationId": "obtenerTodas",
        "responses": {
          "200": {
            "description": "Lista de sucursales obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay sucursales disponibles (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sucursales"
        ],
        "summary": "Crea una nueva sucursal",
        "description": "Permite registrar una nueva sucursal en el sistema con todos los datos necesarios",
        "operationId": "crearSucursal",
        "requestBody": {
          "description": "Datos de la nueva sucursal a crear",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchDTO"
              },
              "examples": {
                "Sucursal ejemplo": {
                  "summary": "Ejemplo de una sucursal completa",
                  "description": "Sucursal ejemplo",
                  "value": {
                    "name": "Sucursal Test Crear",
                    "address": "Av. Test 123, Col. Centro",
                    "region": "Región Test"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sucursal creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "400": {
            "description": "Datos de la sucursal inválidos o incompletos",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto: una sucursal con datos similares ya existe",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/registro": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "operationId": "registro",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/login": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "operationId": "obtenerTodos_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order/byClient/{clientId}": {
      "get": {
        "tags": [
          " ** Endpoints Orden **"
        ],
        "summary": "Obtiene órdenes por ID de cliente",
        "description": "Este endpoint devuelve una lista de órdenes asociadas a un cliente específico",
        "operationId": "obtenerPorUserId",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Órdenes obtenidas exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "No se encontraron órdenes para el cliente especificado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/client/{id}": {
      "get": {
        "tags": [
          "** Endpoints Cliente **"
        ],
        "summary": "Obtiene un cliente por su ID",
        "description": "Recupera los detalles de un cliente específico utilizando su identificador único",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del cliente",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Cliente no encontrada con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelClient"
                }
              }
            }
          },
          "400": {
            "description": "ID de Cliente inválido.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelClient"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "** Endpoints Cliente **"
        ],
        "summary": "Elimina uncliente",
        "description": "Permite eliminar un cliente específico del sistema utilizando su identificador único",
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del cliente a eliminar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente eliminado exitosamente",
            "content": {
              "application/json": {
                "example": {
                  "message": "Cliente eliminado exitosamente"
                }
              }
            }
          },
          "404": {
            "description": "El Cliente no ha sido encontrado con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/carts/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "operationId": "getCartById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/carts/orders/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/order/delete/{orderId}": {
      "delete": {
        "tags": [
          " ** Endpoints Orden **"
        ],
        "summary": "Elimina una orden por su ID",
        "description": "Este endpoint permite eliminar una orden específica utilizando su ID",
        "operationId": "delete_3",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Orden eliminada exitosamente",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/{id}": {
      "delete": {
        "tags": [
          "Autenticación"
        ],
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "details": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "EntityModelProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "details": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "cartItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fidelityPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderNumber": {
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "sku": {
            "type": "string"
          }
        }
      },
      "OrderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderNumber": {
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "cartId": {
            "type": "integer",
            "format": "int64"
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EntityModelOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderNumber": {
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "ClientDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fidelityPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CartItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CartRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemRequest"
            }
          }
        }
      },
      "BranchDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      },
      "RegisterDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthenticationDTO": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "roleName": {
            "type": "string",
            "enum": [
              "ADMIN",
              "COMPRA",
              "DEVELOPER"
            ]
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "uniqueItems": true
          }
        }
      },
      "CollectionModelEntityModelProductResponse": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "productResponseList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "CollectionModelEntityModelOrder": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "orderList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "CollectionModelEntityModelClient": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "clientList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelClient"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "EntityModelClient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fidelityPoints": {
            "type": "integer",
            "format": "int32"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "CartItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "productSku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CartResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "cartItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemResponse"
            }
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "Links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Link"
        }
      }
    }
  }
}