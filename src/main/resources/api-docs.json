{
  "openapi": "3.1.0",
  "info": {
    "title": "Letras y Papeles API",
    "description": "Endpoints para la implementación del proyecto Letras y Papeles",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": " Order",
      "description": "Operaciones relacionadas con las Órdenes"
    },
    {
      "name": "Cart",
      "description": "Operaciones relacionadas con el carro de compras"
    },
    {
      "name": "Autenticación",
      "description": "Operaciones registrar y autenticar usuarios"
    },
    {
      "name": "Developers",
      "description": "Operaciones relacionadas con los desarrolladores"
    },
    {
      "name": "Roles",
      "description": "Operaciones relacionadas con los roles de usuario"
    },
    {
      "name": "Client",
      "description": "Operaciones relacionadas con la entidad Cliente"
    },
    {
      "name": "Product",
      "description": "Operaciones relacionadas con los productos"
    },
    {
      "name": "Admins",
      "description": "Operaciones relacionadas con los administradores"
    },
    {
      "name": "Users",
      "description": "Operaciones relacionadas a los usuarios"
    }
  ],
  "paths": {
    "/api/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Obtiene un producto por su ID",
        "description": "Este endpoint devuelve un producto específico basado en su ID",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del producto",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Producto encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Actualiza un producto existente",
        "description": "Este endpoint permite actualizar un producto existente en el sistema",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del producto a actualizar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Datos del producto a actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Producto actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Elimina un producto por su ID",
        "description": "Este endpoint permite eliminar un producto específico basado en su ID",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del producto",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Producto eliminado exitosamente",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Producto no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order/{id}": {
      "get": {
        "tags": [
          " Order"
        ],
        "summary": "Obtiene una orden por su ID",
        "description": "Este endpoint permite obtener una orden específica utilizando su ID",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la orden",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Orden obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          " Order"
        ],
        "summary": "Actualiza una orden existente",
        "description": "Este endpoint permite actualizar los detalles de una orden existente",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único de la orden",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Datos de la orden a actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Orden actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/create": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Crea un nuevo rol",
        "description": "Este endpoint permite crear un nuevo rol en el sistema",
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Rol creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida, rol no creado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo ADMIN",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        }
      }
    },
    "/api/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Obtiene una lista de todos los productos",
        "description": "Este endpoint devuelve una lista completa de todas los productos registradas en el sistema",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "Lista de productos obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay productos disponibles (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelProductResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Crea un nuevo producto",
        "description": "Este endpoint permite crear un nuevo producto en el sistema",
        "operationId": "createProduct",
        "requestBody": {
          "description": "Datos del producto a crear",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              },
              "examples": {
                "Producto ejemplo": {
                  "summary": "Ejemplo de un producto completo",
                  "description": "Producto ejemplo",
                  "value": {
                    "name": "Producto Ejemplo",
                    "sku": "SKU12345",
                    "details": "Detalles del producto",
                    "price": 100
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Producto creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Procesa el carro y genera una orden",
        "description": "Este endpoint procesa el carro de compras y genera un recibo con la orden",
        "operationId": "processCart",
        "requestBody": {
          "description": "Datos del carro y orden a crear",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartRequest"
              },
              "examples": {
                "Crear compra": {
                  "summary": "Ejemplo para crear una compra",
                  "description": "Crear compra",
                  "value": {
                    "clientId": 1,
                    "items": [
                      {
                        "productId": 1,
                        "quantity": 2
                      },
                      {
                        "productId": 3,
                        "quantity": 1
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Recibo generado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inválida",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/register/developer": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "summary": "Registra un usuario tipo developer",
        "description": "Este endpoint permite crear un nuevo usuario con rol de developer",
        "operationId": "registerDeveloper",
        "requestBody": {
          "description": "Datos del usuario developer a registrar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeveloperRequest"
              },
              "examples": {
                "Ejemplo": {
                  "summary": "Registro de un usuario developer",
                  "description": "Ejemplo",
                  "value": {
                    "name": "nicolas",
                    "password": "password",
                    "username": "nico",
                    "position": "frontend"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Usuario developer registrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta, verifique los datos proporcionados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/register/client": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "summary": "Registra un usuario tipo cliente",
        "description": "Este endpoint permite crear un nuevo usuario con rol de cliente",
        "operationId": "registerClient",
        "requestBody": {
          "description": "Datos del usuario cliente a registrar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRequest"
              },
              "examples": {
                "Ejemplo": {
                  "summary": "Registro de un usuario cliente",
                  "description": "Ejemplo",
                  "value": {
                    "name": "juan",
                    "username": "juanito",
                    "email": "juanin@correo.com",
                    "password": "password",
                    "fidelityPoints": 100
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Usuario cliente registrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta, verifique los datos proporcionados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/register/admin": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "summary": "Registra un usuario tipo administrador",
        "description": "Este endpoint permite crear un nuevo usuario con rol de administrador",
        "operationId": "registerAdmin",
        "requestBody": {
          "description": "Datos del usuario administrador a registrar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminRequest"
              },
              "examples": {
                "Ejemplo": {
                  "summary": "Registro de un usuario administrador",
                  "description": "Ejemplo",
                  "value": {
                    "name": "administrador",
                    "username": "admin",
                    "password": "password",
                    "message": "Soy el mas pulento de todos"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Usuario administrador registrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta, verifique los datos proporcionados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/login": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "summary": "Obtención de token de autenticación",
        "description": "Este endpoint devuelve un token JWT para la autenticación de usuarios",
        "operationId": "login",
        "requestBody": {
          "description": "Datos necesarios para la autenticación del usuario",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminRequest"
              },
              "examples": {
                "Ejemplo login developer": {
                  "summary": "Inicio de sesión de un usuario con rol de developer",
                  "description": "Ejemplo login developer",
                  "value": {
                    "username": "nico",
                    "password": "password"
                  }
                },
                "Ejemplo login cliente": {
                  "summary": "Inicio de sesión de un usuario con rol de cliente",
                  "description": "Ejemplo login cliente",
                  "value": {
                    "username": "juanito",
                    "password": "password"
                  }
                },
                "Ejemplo login administrador": {
                  "summary": "Inicio de sesión de un usuario con rol de administrador",
                  "description": "Ejemplo login administrador",
                  "value": {
                    "username": "admin",
                    "password": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token obtenido exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthenticationResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta, verifique las credenciales proporcionadas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Obtiene una lista de todos los usuarios independiente de su rol",
        "description": "Este endpoint devuelve una lista completa de todos los usuarios registrados en el sistema",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Lista de usuarios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseUser"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay usuarios registrados (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseUser"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/role": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Obtiene una lista de todos los roles",
        "description": "Este endpoint devuelve una lista completa de todas los roles registrados en el sistema que se pueden asignar a los usuarios",
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "Lista de roles obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay roles registrados (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo ADMIN",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order": {
      "get": {
        "tags": [
          " Order"
        ],
        "summary": "Obtiene una lista de todas las órdenes",
        "description": "Este endpoint devuelve una lista completa de todas las órdenes registradas en el sistema",
        "operationId": "getAllOrders",
        "responses": {
          "200": {
            "description": "Lista de órdenes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "204": {
            "description": "No hay órdenes disponibles (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelOrder"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelOrder"
                }
              }
            }
          }
        }
      }
    },
    "/api/developer": {
      "get": {
        "tags": [
          "Developers"
        ],
        "summary": "Obtiene una lista de todos los usuarios tipo developer",
        "description": "Este endpoint devuelve una lista completa de todos los developers registrados en el sistema",
        "operationId": "getAllDevelopers",
        "responses": {
          "200": {
            "description": "Lista de usuarios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeveloperResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay usuarios con el rol developer creados (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeveloperResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo DEVELOPER",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeveloperResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeveloperResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/developer/{id}": {
      "get": {
        "tags": [
          "Developers"
        ],
        "summary": "Obtiene un usuario tipo developer por su ID",
        "description": "Recupera los detalles de un usuario tipo developer específico utilizando su identificador único",
        "operationId": "getDeveloperById",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Identificador único del usuario tipo developer",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Developer encontrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo DEVELOPER",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperResponse"
                }
              }
            }
          },
          "404": {
            "description": "Developer no encontrada con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID de Developer inválido.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DeveloperResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/client": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Obtiene una lista de todos los clientes",
        "description": "Este endpoint devuelve una lista completa de todos los clientes registrados en el sistema",
        "operationId": "getAllClients",
        "responses": {
          "200": {
            "description": "Lista de clientes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay clientes creados (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Obtiene un cliente por su ID",
        "description": "Recupera los detalles de un cliente específico utilizando su identificador único",
        "operationId": "getClientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del cliente",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente encontrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cliente no encontrada con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID de Cliente inválido.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Elimina un cliente",
        "description": "Permite eliminar un cliente específico del sistema utilizando su identificador único",
        "operationId": "deleteClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del cliente a eliminar",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente eliminado exitosamente",
            "content": {
              "application/json": {
                "example": {
                  "message": "Cliente eliminado exitosamente"
                }
              }
            }
          },
          "404": {
            "description": "El Cliente no ha sido encontrado con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Obtiene un carro por su ID",
        "description": "Este endpoint devuelve un carro específico basado en su ID",
        "operationId": "getCartById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del carro",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Carro encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponse"
                }
              }
            }
          },
          "404": {
            "description": "Carro no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CartResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/orders/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Obtiene una lista de ordenes",
        "description": "Este endpoint devuelve una lista completa de todas las ordenes registradas en el sistema",
        "operationId": "getOrderById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ordenes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay ordenes disponibles (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo CLIENT o ADMIN",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin": {
      "get": {
        "tags": [
          "Admins"
        ],
        "summary": "Obtiene una lista de todos los usuarios tipo Admin",
        "description": "Este endpoint devuelve una lista completa de todos los admins registrados en el sistema",
        "operationId": "getAllAdmins",
        "responses": {
          "200": {
            "description": "Lista de admins obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No hay usuarios con el rol admin creados (La lista está vacía)",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelAdminResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo ADMIN",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelAdminResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModelEntityModelAdminResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/{id}": {
      "get": {
        "tags": [
          "Admins"
        ],
        "summary": "Obtiene un usuario tipo Admin por su ID",
        "description": "Recupera los detalles de un usuario tipo Admin específico utilizando su identificador único",
        "operationId": "getAdminById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identificador único del administrador",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Admin encontrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo ADMIN",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAdminResponse"
                }
              }
            }
          },
          "404": {
            "description": "Admin no encontrada con el ID proporcionado",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAdminResponse"
                }
              }
            }
          },
          "400": {
            "description": "ID de Admin inválido.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelAdminResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/role/{Id}": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Elimina un rol por ID",
        "description": "Este endpoint permite eliminar un rol del sistema por su ID",
        "operationId": "deleteRole",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Rol eliminado exitosamente",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado, se requiere autenticación con rol tipo ADMIN",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Rol no encontrado",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/order/delete/{orderId}": {
      "delete": {
        "tags": [
          " Order"
        ],
        "summary": "Elimina una orden por su ID",
        "description": "Este endpoint permite eliminar una orden específica utilizando su ID",
        "operationId": "deleteOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Orden eliminada exitosamente",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EntityModelProductResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "sku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "Cart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "cartItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          }
        }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "email": {
            "type": "string"
          },
          "fidelityPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderNumber": {
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "sku": {
            "type": "string"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "roleName": {
            "type": "string",
            "enum": [
              "ADMIN",
              "CLIENT",
              "DEVELOPER"
            ]
          }
        }
      },
      "OrderResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderNumber": {
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "cartId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EntityModelOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderNumber": {
            "type": "string"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "cart": {
            "$ref": "#/components/schemas/Cart"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "CartItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CartRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemRequest"
            }
          }
        }
      },
      "DeveloperRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "position": {
            "type": "string"
          }
        }
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fidelityPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fidelityPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AdminRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AdminResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          }
        }
      },
      "BaseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        }
      },
      "CollectionModelEntityModelProductResponse": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "productResponseList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelProductResponse"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "CollectionModelEntityModelOrder": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "orderList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelOrder"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "DeveloperResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "position": {
            "type": "string"
          }
        }
      },
      "CartItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "productSku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CartResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "cartItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemResponse"
            }
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CollectionModelEntityModelAdminResponse": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "adminResponseList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelAdminResponse"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "EntityModelAdminResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "Links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Link"
        }
      }
    }
  }
}